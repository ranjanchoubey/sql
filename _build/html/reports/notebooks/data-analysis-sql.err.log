Traceback (most recent call last):
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/python/3.12.1/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/python/3.12.1/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Data quality checks
print("=== DATA QUALITY ASSESSMENT ===")

print("1. Missing or NULL values:")
null_check = pd.read_sql_query("""
SELECT 
    'employees' as table_name,
    SUM(CASE WHEN first_name IS NULL THEN 1 ELSE 0 END) as null_first_name,
    SUM(CASE WHEN last_name IS NULL THEN 1 ELSE 0 END) as null_last_name,
    SUM(CASE WHEN email IS NULL THEN 1 ELSE 0 END) as null_email,
    SUM(CASE WHEN salary IS NULL THEN 1 ELSE 0 END) as null_salary
FROM employees
UNION ALL
SELECT 
    'sales_transactions',
    SUM(CASE WHEN emp_id IS NULL THEN 1 ELSE 0 END),
    SUM(CASE WHEN sale_date IS NULL THEN 1 ELSE 0 END),
    SUM(CASE WHEN amount IS NULL THEN 1 ELSE 0 END),
    SUM(CASE WHEN customer_id IS NULL THEN 1 ELSE 0 END)
""", conn)
display(null_check)

print("\n2. Duplicate records check:")
duplicate_check = pd.read_sql_query("""
SELECT 
    'employees' as table_name,
    COUNT(*) as total_records,
    COUNT(DISTINCT email) as unique_emails,
    COUNT(*) - COUNT(DISTINCT email) as potential_duplicates
FROM employees
UNION ALL
SELECT 
    'sales_transactions',
    COUNT(*),
    COUNT(DISTINCT transaction_id),
    COUNT(*) - COUNT(DISTINCT transaction_id)
FROM sales_transactions
""", conn)
display(duplicate_check)

print("\n3. Data range validation:")
range_check = pd.read_sql_query("""
SELECT 
    'salary_ranges' as check_type,
    COUNT(*) as total_employees,
    SUM(CASE WHEN salary < 30000 THEN 1 ELSE 0 END) as below_minimum,
    SUM(CASE WHEN salary > 200000 THEN 1 ELSE 0 END) as above_maximum
FROM employees
UNION ALL
SELECT 
    'sale_amounts',
    COUNT(*),
    SUM(CASE WHEN amount <= 0 THEN 1 ELSE 0 END),
    SUM(CASE WHEN amount > 50000 THEN 1 ELSE 0 END)
FROM sales_transactions
""", conn)
display(range_check)
------------------

----- stdout -----
=== DATA QUALITY ASSESSMENT ===
1. Missing or NULL values:
------------------

[31m---------------------------------------------------------------------------[39m
[31mOperationalError[39m                          Traceback (most recent call last)
[36mFile [39m[32m~/.local/lib/python3.12/site-packages/pandas/io/sql.py:2674[39m, in [36mSQLiteDatabase.execute[39m[34m(self, sql, params)[39m
[32m   2673[39m [38;5;28;01mtry[39;00m:
[32m-> [39m[32m2674[39m     [43mcur[49m[43m.[49m[43mexecute[49m[43m([49m[43msql[49m[43m,[49m[43m [49m[43m*[49m[43margs[49m[43m)[49m
[32m   2675[39m     [38;5;28;01mreturn[39;00m cur

[31mOperationalError[39m: no such column: emp_id

The above exception was the direct cause of the following exception:

[31mDatabaseError[39m                             Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[11][39m[32m, line 5[39m
[32m      2[39m [38;5;28mprint[39m([33m"[39m[33m=== DATA QUALITY ASSESSMENT ===[39m[33m"[39m)
[32m      4[39m [38;5;28mprint[39m([33m"[39m[33m1. Missing or NULL values:[39m[33m"[39m)
[32m----> [39m[32m5[39m null_check = [43mpd[49m[43m.[49m[43mread_sql_query[49m[43m([49m[33;43m"""[39;49m
[32m      6[39m [33;43mSELECT [39;49m
[32m      7[39m [33;43m    [39;49m[33;43m'[39;49m[33;43memployees[39;49m[33;43m'[39;49m[33;43m as table_name,[39;49m
[32m      8[39m [33;43m    SUM(CASE WHEN first_name IS NULL THEN 1 ELSE 0 END) as null_first_name,[39;49m
[32m      9[39m [33;43m    SUM(CASE WHEN last_name IS NULL THEN 1 ELSE 0 END) as null_last_name,[39;49m
[32m     10[39m [33;43m    SUM(CASE WHEN email IS NULL THEN 1 ELSE 0 END) as null_email,[39;49m
[32m     11[39m [33;43m    SUM(CASE WHEN salary IS NULL THEN 1 ELSE 0 END) as null_salary[39;49m
[32m     12[39m [33;43mFROM employees[39;49m
[32m     13[39m [33;43mUNION ALL[39;49m
[32m     14[39m [33;43mSELECT [39;49m
[32m     15[39m [33;43m    [39;49m[33;43m'[39;49m[33;43msales_transactions[39;49m[33;43m'[39;49m[33;43m,[39;49m
[32m     16[39m [33;43m    SUM(CASE WHEN emp_id IS NULL THEN 1 ELSE 0 END),[39;49m
[32m     17[39m [33;43m    SUM(CASE WHEN sale_date IS NULL THEN 1 ELSE 0 END),[39;49m
[32m     18[39m [33;43m    SUM(CASE WHEN amount IS NULL THEN 1 ELSE 0 END),[39;49m
[32m     19[39m [33;43m    SUM(CASE WHEN customer_id IS NULL THEN 1 ELSE 0 END)[39;49m
[32m     20[39m [33;43m"""[39;49m[43m,[49m[43m [49m[43mconn[49m[43m)[49m
[32m     21[39m display(null_check)
[32m     23[39m [38;5;28mprint[39m([33m"[39m[38;5;130;01m\n[39;00m[33m2. Duplicate records check:[39m[33m"[39m)

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/pandas/io/sql.py:526[39m, in [36mread_sql_query[39m[34m(sql, con, index_col, coerce_float, params, parse_dates, chunksize, dtype, dtype_backend)[39m
[32m    523[39m [38;5;28;01massert[39;00m dtype_backend [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m lib.no_default
[32m    525[39m [38;5;28;01mwith[39;00m pandasSQL_builder(con) [38;5;28;01mas[39;00m pandas_sql:
[32m--> [39m[32m526[39m     [38;5;28;01mreturn[39;00m [43mpandas_sql[49m[43m.[49m[43mread_query[49m[43m([49m
[32m    527[39m [43m        [49m[43msql[49m[43m,[49m
[32m    528[39m [43m        [49m[43mindex_col[49m[43m=[49m[43mindex_col[49m[43m,[49m
[32m    529[39m [43m        [49m[43mparams[49m[43m=[49m[43mparams[49m[43m,[49m
[32m    530[39m [43m        [49m[43mcoerce_float[49m[43m=[49m[43mcoerce_float[49m[43m,[49m
[32m    531[39m [43m        [49m[43mparse_dates[49m[43m=[49m[43mparse_dates[49m[43m,[49m
[32m    532[39m [43m        [49m[43mchunksize[49m[43m=[49m[43mchunksize[49m[43m,[49m
[32m    533[39m [43m        [49m[43mdtype[49m[43m=[49m[43mdtype[49m[43m,[49m
[32m    534[39m [43m        [49m[43mdtype_backend[49m[43m=[49m[43mdtype_backend[49m[43m,[49m
[32m    535[39m [43m    [49m[43m)[49m

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/pandas/io/sql.py:2738[39m, in [36mSQLiteDatabase.read_query[39m[34m(self, sql, index_col, coerce_float, parse_dates, params, chunksize, dtype, dtype_backend)[39m
[32m   2727[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mread_query[39m(
[32m   2728[39m     [38;5;28mself[39m,
[32m   2729[39m     sql,
[32m   (...)[39m[32m   2736[39m     dtype_backend: DtypeBackend | Literal[[33m"[39m[33mnumpy[39m[33m"[39m] = [33m"[39m[33mnumpy[39m[33m"[39m,
[32m   2737[39m ) -> DataFrame | Iterator[DataFrame]:
[32m-> [39m[32m2738[39m     cursor = [38;5;28;43mself[39;49m[43m.[49m[43mexecute[49m[43m([49m[43msql[49m[43m,[49m[43m [49m[43mparams[49m[43m)[49m
[32m   2739[39m     columns = [col_desc[[32m0[39m] [38;5;28;01mfor[39;00m col_desc [38;5;129;01min[39;00m cursor.description]
[32m   2741[39m     [38;5;28;01mif[39;00m chunksize [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

[36mFile [39m[32m~/.local/lib/python3.12/site-packages/pandas/io/sql.py:2686[39m, in [36mSQLiteDatabase.execute[39m[34m(self, sql, params)[39m
[32m   2683[39m     [38;5;28;01mraise[39;00m ex [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01minner_exc[39;00m
[32m   2685[39m ex = DatabaseError([33mf[39m[33m"[39m[33mExecution failed on sql [39m[33m'[39m[38;5;132;01m{[39;00msql[38;5;132;01m}[39;00m[33m'[39m[33m: [39m[38;5;132;01m{[39;00mexc[38;5;132;01m}[39;00m[33m"[39m)
[32m-> [39m[32m2686[39m [38;5;28;01mraise[39;00m ex [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mexc[39;00m

[31mDatabaseError[39m: Execution failed on sql '
SELECT 
    'employees' as table_name,
    SUM(CASE WHEN first_name IS NULL THEN 1 ELSE 0 END) as null_first_name,
    SUM(CASE WHEN last_name IS NULL THEN 1 ELSE 0 END) as null_last_name,
    SUM(CASE WHEN email IS NULL THEN 1 ELSE 0 END) as null_email,
    SUM(CASE WHEN salary IS NULL THEN 1 ELSE 0 END) as null_salary
FROM employees
UNION ALL
SELECT 
    'sales_transactions',
    SUM(CASE WHEN emp_id IS NULL THEN 1 ELSE 0 END),
    SUM(CASE WHEN sale_date IS NULL THEN 1 ELSE 0 END),
    SUM(CASE WHEN amount IS NULL THEN 1 ELSE 0 END),
    SUM(CASE WHEN customer_id IS NULL THEN 1 ELSE 0 END)
': no such column: emp_id

